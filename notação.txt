1 Instalar o angular via cli- npm i -g @angular/cli

2 ng new [nome do Projeto]
dar yes para fazer o roteamento
dar no na opção seguinte

3 escolher usar css no projeto na terceira opção

4 certificar que está na pasta do projeto

dicas:

ng new my-first-project
cd my-first-project
ng serve (inicializar servidor).

A pasta assets é destinada a guardar arquivos externos ao projeto do angular, como: imagens, fonts, vídeos etc.

//cria class user
ng g class services/user

//cria componente user
ng g c services/user

//cria modelo user
ng g model services/user

//Para cada view tem um service e um model
ng g service services/user

1)importar modulo http e declarar na app.module
2)criar o service
3)criar a variável httpClient no constructor da view
4)criar uma variável url na view
5)criar função e chamar método http (get, post, put ou delete)

ER1:
{\rtf1\ansi\ansicpg1252\cocoartf2638
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica;\f1\fswiss\fcharset0 Helvetica-Bold;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\paperw11900\paperh16840\margl1440\margr1440\vieww20620\viewh13400\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f0\fs48 \cf0 Importar o m\'f3dulo HttpClientModule (
\f1\b app.module.ts
\f0\b0 )\
	
\f1\b import \{ HttpClientModule \} from "@angular/common/http";\
	imports: [\
		*,\
		HttpClientModule\
	]\
\
\f0\b0 Criar o service \
	ng generate service services/user\
		criar a vari\'e1vel de httpClient dentro do constructor(??)\{\}\
	criar uma vari\'e1vel url com o endere\'e7o do servi\'e7o/recurso da api\
	criar o m\'e9todo post\
\
Criar o m\'e9todo de login que chama o service (login.component.ts)\
	criar a vari\'e1vel de userService dentro do constructor(??)\{\}\
	criar a fun\'e7\'e3o de login/signin\
\
Subir o servidor de api fake (
\f1\b https://www.npmjs.com/package/json-server-auth
\f0\b0 )\
json-server db.json -m ./node_modules/json-server-auth}

ER: 01 Angular Leia-me

{\rtf1\ansi\ansicpg1252\cocoartf2638
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica;\f1\fswiss\fcharset0 Helvetica-Bold;}
{\colortbl;\red255\green255\blue255;\red5\green68\blue254;}
{\*\expandedcolortbl;;\cssrgb\c0\c38136\c99824;}
\paperw11900\paperh16840\margl1440\margr1440\vieww17760\viewh11180\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f0\fs48 \cf0 Biblioteca Vs Frameworks\
\
Bibliotecas: \
	jQuery / jQuery Mask\
	React JS / React Native (celular - iOS e Android)\
\
Frameworks:\
	Angular / Ionic (celular - Android e IOS) - Cordova \
	VueJS\
\
SPA - Single Page Application (aplica\'e7\'e3o de uma \'fanica p\'e1gina)\
_______________________________________________________________\
\
Componentes (partes de uma interface)\
\
Quem utiliza o Angular\
	Gmail, Netflix, Paypal\
\
Node \'e9 a base dos frameworks js\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0
\cf0 _______________________________________________________\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0
\cf0 Instalar o Angular CLI - Command Line Inteface\
\
	
\f1\b npm install -g @angular/cli
\f0\b0 \
\
Criar um projeto Angular\
	
\f1\b ng new [NomeDoProjeto]	- instala a estrutura \
		
\f0\b0 * confirmar o routing [y/N] y\
		* confirmar o formato de 
\f1\b \cf2 CSS
\f0\b0 \cf0  que voc\'ea usa\
	
\f1\b cd [NomeDoProjeto]
\f0\b0  - Entra na pasta do projeto criado\
	
\f1\b ng serve -
\f0\b0  Roda o projeto\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0
\cf0 	
\f1\b ng serve -o
\f0\b0  - Roda e abre o projeto\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0
\cf0 \
_______________________________________________________\
\
Estrutura de arquivos de um componente\
	app.component.html\
	app.component.css\
	app.component.ts - famoso javascript\
\
**CTRL + C - para de rodar o programa no terminal\
}

ER: 01 Angular Leia-me

{\rtf1\ansi\ansicpg1252\cocoartf2638
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fnil\fcharset0 HelveticaNeue;\f1\fnil\fcharset0 HelveticaNeue-Bold;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\paperw11900\paperh16840\margl1440\margr1440\vieww17760\viewh11180\viewkind0
\deftab560
\pard\pardeftab560\slleading20\partightenfactor0

\f0\fs48 \cf0 Componente:\
	Template - Exibi\'e7\'e3o dos dados/conte\'fados\
	Estiliza\'e7\'e3o - Apar\'eancia em si - CSS\
	Classe - Manipula os dados da p\'e1gina\
	Servi\'e7es - ** comunica\'e7\'e3o com API`s externas/back end\
\
************* RESUMO - PASSOS MACROS ***********************\
Criar o componente 
\f1\b views/login
\f0\b0  \
Criar o HTML do Form\uc0\u8232 Adicionar e importar o m\'f3dulo 
\f1\b FormsModule
\f0\b0  no (
\f1\b app.module.ts)
\f0\b0 \
Criar a classe modelo userModel - 
\f1\b ng generate class models/user
\f0\b0 \
Declarar/Instanciar 
\f1\b userModel
\f0\b0  na classe Login (
\f1\b login.component.ts
\f0\b0 )\
Vincular os inputs do Form com 
\f1\b [(ngModel)]=\'93user.Model.email\'94 
\f0\b0 e adicionar o atributo 
\f1\b name
\f0\b0  no campo\
Vincular Evento ngSubmit 
\f1\b (ngSubmit)=\'93receberDados()\'94
\f0\b0 \
Criar a fun\'e7\'e3o receberDados() no 
\f1\b login.component.ts
\f0\b0 \
\pard\pardeftab560\slleading20\pardirnatural\partightenfactor0
\cf0 \
\pard\pardeftab560\slleading20\partightenfactor0
\cf0 receberDados()\{\
	console.log(
\f1\b this.
\f0\b0 userModel);\
	console.log(this.userModel.nome);\
	console.log(this.userModel.senha);\
\}
\fs26 \
}